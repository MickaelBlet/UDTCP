##
## Author: MickaÃ«l BLET
##

#------------------------------------------------------------------------------
# default template values

DEFAULT_MODE					=	debug
DEFAULT_VERSION					=	0.0.0

NAME							=	$(notdir $(CURDIR))
DEFAULT_BINARY_NAME				=	$(NAME)
DEFAULT_LIBRARY_NAME			=	$(NAME)

DEFAULT_BINARY_DIRECTORY		=	bin/
DEFAULT_LIBRARY_DIRECTORY		=	lib/
DEFAULT_SOURCE_DIRECTORY		=	src/
DEFAULT_TEST_DIRECTORY			=	test/
DEFAULT_INCLUDE_DIRECTORY		=	include/
DEFAULT_OBJECT_DIRECTORY		=	obj/

DEFAULT_SOURCE_EXTENTION		=	.c

DEFAULT_BINARY_EXCLUDE_SOURCE	=
DEFAULT_LIBRARY_EXCLUDE_SOURCE	=
DEFAULT_TEST_EXCLUDE_SOURCE		=

DEFAULT_DEBUG_COMPILER			=	$(CC)
DEFAULT_RELEASE_COMPILER		=	$(CC)
DEFAULT_TEST_COMPILER			=	$(CC)

DEFAULT_DEBUG_FLAGS				=	$(CFLAGS)
DEFAULT_RELEASE_FLAGS			=	$(CFLAGS)
DEFAULT_TEST_FLAGS				=	$(CFLAGS)

DEFAULT_DEBUG_OPTIONS			=
DEFAULT_RELEASE_OPTIONS			=
DEFAULT_TEST_OPTIONS			=

DEFAULT_DEBUG_DEPENDENCIES		=
DEFAULT_RELEASE_DEPENDENCIES	=
DEFAULT_TEST_DEPENDENCIES		=

#------------------------------------------------------------------------------
# Can be modified out template

MODE						:=	$(if $(strip $(MODE)),$(MODE),$(DEFAULT_MODE))
VERSION						:=	$(if $(strip $(VERSION)),$(VERSION),$(DEFAULT_VERSION))

BINARY_NAME					:=	$(if $(strip $(BINARY_NAME)),$(BINARY_NAME),$(DEFAULT_BINARY_NAME))
LIBRARY_NAME				:=	$(if $(strip $(LIBRARY_NAME)),$(LIBRARY_NAME),$(DEFAULT_LIBRARY_NAME))

BINARY_DIRECTORY			:=	$(if $(strip $(BINARY_DIRECTORY)),$(BINARY_DIRECTORY),$(DEFAULT_BINARY_DIRECTORY))
LIBRARY_DIRECTORY			:=	$(if $(strip $(LIBRARY_DIRECTORY)),$(LIBRARY_DIRECTORY),$(DEFAULT_LIBRARY_DIRECTORY))
SOURCE_DIRECTORY			:=	$(if $(strip $(SOURCE_DIRECTORY)),$(SOURCE_DIRECTORY),$(DEFAULT_SOURCE_DIRECTORY))
TEST_DIRECTORY				:=	$(if $(strip $(TEST_DIRECTORY)),$(TEST_DIRECTORY),$(DEFAULT_TEST_DIRECTORY))
INCLUDE_DIRECTORY			:=	$(if $(strip $(INCLUDE_DIRECTORY)),$(INCLUDE_DIRECTORY),$(DEFAULT_INCLUDE_DIRECTORY))
OBJECT_DIRECTORY			:=	$(if $(strip $(OBJECT_DIRECTORY)),$(OBJECT_DIRECTORY),$(DEFAULT_OBJECT_DIRECTORY))

SOURCE_EXTENTION			:=	$(if $(strip $(SOURCE_EXTENTION)),$(SOURCE_EXTENTION),$(DEFAULT_SOURCE_EXTENTION))

BINARY_EXCLUDE_SOURCE		:=	$(if $(strip $(BINARY_EXCLUDE_SOURCE)),$(BINARY_EXCLUDE_SOURCE),$(DEFAULT_BINARY_EXCLUDE_SOURCE))
LIBRARY_EXCLUDE_SOURCE		:=	$(if $(strip $(LIBRARY_EXCLUDE_SOURCE)),$(LIBRARY_EXCLUDE_SOURCE),$(DEFAULT_LIBRARY_EXCLUDE_SOURCE))
TEST_EXCLUDE_SOURCE			:=	$(if $(strip $(TEST_EXCLUDE_SOURCE)),$(TEST_EXCLUDE_SOURCE),$(DEFAULT_TEST_EXCLUDE_SOURCE))

DEBUG_COMPILER				:=	$(if $(strip $(DEBUG_COMPILER)),$(DEBUG_COMPILER),$(DEFAULT_DEBUG_COMPILER))
RELEASE_COMPILER			:=	$(if $(strip $(RELEASE_COMPILER)),$(RELEASE_COMPILER),$(DEFAULT_RELEASE_COMPILER))
TEST_COMPILER				:=	$(if $(strip $(TEST_COMPILER)),$(TEST_COMPILER),$(DEFAULT_TEST_COMPILER))

DEBUG_FLAGS					:=	$(if $(strip $(DEBUG_FLAGS)),$(DEBUG_FLAGS),$(DEFAULT_DEBUG_FLAGS))
RELEASE_FLAGS				:=	$(if $(strip $(RELEASE_FLAGS)),$(RELEASE_FLAGS),$(DEFAULT_RELEASE_FLAGS))
TEST_FLAGS					:=	$(if $(strip $(TEST_FLAGS)),$(TEST_FLAGS),$(DEFAULT_TEST_FLAGS))

DEBUG_OPTIONS				:=	$(if $(strip $(DEBUG_OPTIONS)),$(DEBUG_OPTIONS),$(DEFAULT_DEBUG_OPTIONS))
RELEASE_OPTIONS				:=	$(if $(strip $(RELEASE_OPTIONS)),$(RELEASE_OPTIONS),$(DEFAULT_RELEASE_OPTIONS))
TEST_OPTIONS				:=	$(if $(strip $(TEST_OPTIONS)),$(TEST_OPTIONS),$(DEFAULT_TEST_OPTIONS))

DEBUG_DEPENDENCIES			:=	$(if $(strip $(DEBUG_DEPENDENCIES)),$(DEBUG_DEPENDENCIES),$(DEFAULT_DEBUG_DEPENDENCIES))
RELEASE_DEPENDENCIES		:=	$(if $(strip $(RELEASE_DEPENDENCIES)),$(RELEASE_DEPENDENCIES),$(DEFAULT_RELEASE_DEPENDENCIES))
TEST_DEPENDENCIES			:=	$(if $(strip $(TEST_DEPENDENCIES)),$(TEST_DEPENDENCIES) $(DEFAULT_TEST_DEPENDENCIES))

#------------------------------------------------------------------------------

FIND_SOURCE					=	$(shell find $(SOURCE_DIRECTORY) -name "*$(SOURCE_EXTENTION)")
FIND_TEST					=	$(shell find $(TEST_DIRECTORY) -name "*.cpp")
SOURCE						:=	$(subst $(SOURCE_DIRECTORY),,$(FIND_SOURCE))
TEST						:=	$(subst $(TEST_DIRECTORY),,$(FIND_TEST))

OBJECT_DIRECTORIES			:=	$(addprefix $(OBJECT_DIRECTORY),$(sort $(dir $(SOURCE))) $(sort $(dir $(TEST))))

SOURCE_FILTER				:=	$(filter-out $(BINARY_EXCLUDE_SOURCE),$(SOURCE))
LIBRARY_SOURCE_FILTER		:=	$(filter-out $(LIBRARY_EXCLUDE_SOURCE),$(SOURCE))
TEST_SOURCE_FILTER			:=	$(filter-out $(TEST_EXCLUDE_SOURCE),$(TEST))

OBJECT_DEBUG				:=	$(addprefix $(OBJECT_DIRECTORY),$(SOURCE_FILTER:$(SOURCE_EXTENTION)=-debug-$(VERSION).o))
OBJECT_RELEASE				:=	$(addprefix $(OBJECT_DIRECTORY),$(SOURCE_FILTER:$(SOURCE_EXTENTION)=-release-$(VERSION).o))
LIBRARY_OBJECT_DEBUG		:=	$(addprefix $(OBJECT_DIRECTORY),$(LIBRARY_SOURCE_FILTER:$(SOURCE_EXTENTION)=-debug-$(VERSION).o))
LIBRARY_OBJECT_RELEASE		:=	$(addprefix $(OBJECT_DIRECTORY),$(LIBRARY_SOURCE_FILTER:$(SOURCE_EXTENTION)=-release-$(VERSION).o))
OBJECT_TEST					:=	$(addprefix $(OBJECT_DIRECTORY),$(TEST_SOURCE_FILTER:.cpp=-test-$(VERSION).o))

LIBRARY_DEBUG				:=	$(LIBRARY_DIRECTORY)lib$(basename $(LIBRARY_NAME))-debug.a
LIBRARY_RELEASE				:=	$(LIBRARY_DIRECTORY)lib$(basename $(LIBRARY_NAME))-release.a
BINARY_DEBUG				:=	$(BINARY_DIRECTORY)$(BINARY_NAME)-debug
BINARY_RELEASE				:=	$(BINARY_DIRECTORY)$(BINARY_NAME)-release
BINARIES_TEST				:=	$(addprefix $(BINARY_DIRECTORY),$(TEST_SOURCE_FILTER:.cpp=-test))

#------------------------------------------------------------------------------

COLOR_SHELL_DEBUG			=	$$(tput setaf 3)
COLOR_SHELL_RELEASE			=	$$(tput setaf 2)
COLOR_SHELL_TEST			=	$$(tput setaf 6)
COLOR_SHELL_RESET			=	$$(tput sgr0)

STRING_PRINT_DEBUG			=	"$(COLOR_SHELL_DEBUG)[----------] \n[ DEBUG    ] $(COLOR_SHELL_RESET)%s$(COLOR_SHELL_DEBUG)\n[----------] $(COLOR_SHELL_RESET)\n"
STRING_PRINT_RELEASE		=	"$(COLOR_SHELL_RELEASE)[----------] \n[ RELEASE  ] $(COLOR_SHELL_RESET)%s$(COLOR_SHELL_RELEASE)\n[----------] $(COLOR_SHELL_RESET)\n"
STRING_PRINT_TEST			=	"$(COLOR_SHELL_TEST)[----------] \n[ TEST     ] $(COLOR_SHELL_RESET)%s$(COLOR_SHELL_TEST)\n[----------] $(COLOR_SHELL_RESET)\n"

#------------------------------------------------------------------------------

all:	$(MODE)

$(sort $(LIBRARY_DIRECTORY) $(BINARY_DIRECTORY) $(sort $(dir $(BINARIES_TEST))) $(OBJECT_DIRECTORIES)):
	mkdir -p $@

# object rules
$(OBJECT_DIRECTORY)%-debug-$(VERSION).o:	$(SOURCE_DIRECTORY)%$(SOURCE_EXTENTION) $(DEBUG_DEPENDENCIES) | $(OBJECT_DIRECTORIES)
	$(DEBUG_COMPILER) $(DEBUG_FLAGS) -MMD -c $< -o $@ $(DEBUG_OPTIONS)

$(OBJECT_DIRECTORY)%-release-$(VERSION).o:	$(SOURCE_DIRECTORY)%$(SOURCE_EXTENTION) $(RELEASE_DEPENDENCIES) | $(OBJECT_DIRECTORIES)
	$(RELEASE_COMPILER) $(RELEASE_FLAGS) -MMD -c $< -o $@ $(RELEASE_OPTIONS)

$(OBJECT_DIRECTORY)%-test-$(VERSION).o:		$(TEST_DIRECTORY)%.cpp $(TEST_DEPENDENCIES) | $(OBJECT_DIRECTORIES)
	$(TEST_COMPILER) $(TEST_FLAGS) -MMD -c $< -o $@ $(TEST_OPTIONS)

# binnaries test rules
$(BINARY_DIRECTORY)%-test:					$(OBJECT_DIRECTORY)%-test-$(VERSION).o $(TEST_DEPENDENCIES) | $(sort $(dir $(BINARIES_TEST)))
	$(TEST_COMPILER) $(TEST_FLAGS) -o $@ $< $(TEST_OPTIONS)
	@printf $(STRING_PRINT_TEST) $@

$(LIBRARY_DEBUG):		$(LIBRARY_OBJECT_DEBUG) | $(LIBRARY_DIRECTORY)
	ar rc $@ $^
	@printf $(STRING_PRINT_DEBUG) $@

$(LIBRARY_RELEASE):		$(LIBRARY_OBJECT_RELEASE) | $(LIBRARY_DIRECTORY)
	ar rc $@ $^
	@printf $(STRING_PRINT_RELEASE) $@

$(BINARY_DEBUG):		$(OBJECT_DEBUG) | $(BINARY_DIRECTORY)
	$(DEBUG_COMPILER) $(DEBUG_FLAGS) -o $@ $^ $(DEBUG_OPTIONS)
	@printf $(STRING_PRINT_DEBUG) $@

$(BINARY_RELEASE):		$(OBJECT_RELEASE) | $(BINARY_DIRECTORY)
	$(RELEASE_COMPILER) $(RELEASE_FLAGS) -o $@ $^ $(RELEASE_OPTIONS)
	@printf $(STRING_PRINT_RELEASE) $@

lib_debug:		$(LIBRARY_DEBUG)
lib_release:	$(LIBRARY_RELEASE)
debug:			$(BINARY_DEBUG)
release:		$(BINARY_RELEASE)
test:			$(BINARIES_TEST)

clean:
	$(RM) $(sort \
	$(LIBRARY_OBJECT_DEBUG) \
	$(LIBRARY_OBJECT_DEBUG:.o=.d) \
	$(LIBRARY_OBJECT_RELEASE) \
	$(LIBRARY_OBJECT_RELEASE:.o=.d) \
	$(OBJECT_DEBUG) \
	$(OBJECT_DEBUG:.o=.d) \
	$(OBJECT_RELEASE) \
	$(OBJECT_RELEASE:.o=.d) \
	$(OBJECT_TEST) \
	$(OBJECT_TEST:.o=.d) \
	$(LIBRARY_OBJECT_DEBUG:.o=.gcda) \
	$(LIBRARY_OBJECT_DEBUG:.o=.gcno) \
	$(LIBRARY_OBJECT_RELEASE:.o=.gcda) \
	$(LIBRARY_OBJECT_RELEASE:.o=.gcno) \
	$(OBJECT_DEBUG:.o=.gcda) \
	$(OBJECT_DEBUG:.o=.gcno) \
	$(OBJECT_RELEASE:.o=.gcda) \
	$(OBJECT_RELEASE:.o=.gcno) \
	$(OBJECT_TEST:.o=.gcda) \
	$(OBJECT_TEST:.o=.gcno) \
	)

fclean:			clean
	$(RM) $(sort \
	$(LIBRARY_DEBUG) \
	$(LIBRARY_RELEASE) \
	$(BINARY_DEBUG) \
	$(BINARY_RELEASE) \
	$(BINARIES_TEST) \
	)

re:				fclean
	$(MAKE) all

.SECONDARY:		$(OBJECT_TEST)

PHONY:			all debug release test lib_debug lib_release clean fclean re

#------------------------------------------------------------------------------

-include $(OBJECT_DEBUG:.o=.d)
-include $(OBJECT_RELEASE:.o=.d)
-include $(OBJECT_TEST:.o=.d)